package cn.damai.boss.projectreport.manager.service.impl;import java.io.IOException;import javax.annotation.Resource;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.codehaus.jackson.map.ObjectMapper;import org.springframework.stereotype.Service;import cn.damai.boss.projectreport.common.service.ContextService;import cn.damai.boss.projectreport.commons.ApplicationException;import cn.damai.boss.projectreport.domain.Upt01Operator;import cn.damai.boss.projectreport.manager.context.ManagerUserContext;import cn.damai.boss.projectreport.manager.dao.OperatorDAO;import cn.damai.boss.projectreport.manager.service.AuthenticateService;import cn.damai.component.common.ReturnData;import cn.damai.component.user.facade.UserFacade;import cn.damai.component.user.vo.User;/** * 注释：用户认证service实现类 * 作者：liutengfei 【刘腾飞】 * 时间：14-2-20 下午1:34 */@Servicepublic class AuthenticateServiceImpl implements AuthenticateService {    /**     * 报表上下文信息     */    @Resource    private ContextService contextService;    /**     * 组织机构接口     */    @Resource    private UserFacade userFacade;    /**     * 操作员DAO     */    @Resource    private OperatorDAO operatorDAO;    /**     * 日志     */    private static final Log log = LogFactory.getLog(AuthenticateServiceImpl.class);    /**     * json 解析处理器     */    private static final ObjectMapper jsonMapper = new ObjectMapper();        /**     * 建立用户上下文信息     *     * @return     */    @Override    public ManagerUserContext buildUserContext(String userName) throws ApplicationException {        ManagerUserContext managerUserContext = buildContext(userName);        try {            String json = jsonMapper.writeValueAsString(managerUserContext);            if (log.isDebugEnabled()) {                log.debug("用户上下文信息\n" + json);            }            contextService.add(managerUserContext.getSessionID(), json);        } catch (IOException e1) {            e1.printStackTrace();            log.error("创建用户上下文信息失败");        }        return managerUserContext;    }    /**     * 建立用户上下文信息     *     * @param userName 用户名     * @return     */    private ManagerUserContext buildContext(String userName) {        ManagerUserContext managerUserContext = new ManagerUserContext();        User user = getUserInfoByUserName(userName);        if (user == null)            return managerUserContext;        Long userId = user.getUserId();        Upt01Operator operator = operatorDAO.findByUserId(userId);        Long operatorId = operator.getOperatorId();        managerUserContext.setOperatorId(operatorId);        managerUserContext.setUserId(userId);        managerUserContext.setUserName(user.getUserName());        managerUserContext.setPermissionLevel(operator.getPermissionLevel());        managerUserContext.setTimeStamp(String.valueOf(System.currentTimeMillis()));        StringBuffer sessionID = new StringBuffer();        String sysPrefix = "CN_DAMAI_BOSS_PROJECTREPORT";        sessionID.append(sysPrefix).append("_").append(operatorId);        managerUserContext.setSessionID(String.valueOf(sessionID));        return managerUserContext;    }    /**     * 调用dubbo接口，获取OA用户信息     *     * @param userName 用户名     */    private User getUserInfoByUserName(String userName) {        ReturnData<User> userData = userFacade.findByUserName(userName);        if (userData != null) {            return userData.getResultData();        }        return null;    }}