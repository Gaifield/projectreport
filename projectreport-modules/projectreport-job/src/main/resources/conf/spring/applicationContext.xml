<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

	<context:property-placeholder location="classpath*:crius.properties"
		ignore-unresolvable="true" />

	<context:component-scan base-package="cn.damai.boss">
		<context:include-filter type="regex"
			expression="cn.damai.boss.projectreport.service.*" />
		<context:include-filter type="regex"
			expression="cn.damai.boss.projectreport.dao.*" />
	</context:component-scan>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${projectreport.jdbc.driverClassName}" />
		<property name="url" value="${projectreport.jdbc.url}" />
		<property name="username" value="${projectreport.jdbc.username}" />
		<property name="password" value="${projectreport.jdbc.password}" />
		<!--连接池启动时的初始化 -->
		<property name="initialSize" value="${projectreport.jdbc.initialSize}" />
		<!--连接池的最大值 -->
		<property name="maxActive" value="${projectreport.jdbc.maxActive}" />
		<!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的链接慢慢释放一部分，一直减少到maxle为止 -->
		<property name="maxIdle" value="${projectreport.jdbc.maxIdle}" />
		<!-- 最小空闲值，当空闲的连接数少于阀值时，连接池就会预申请去一些链接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="${projectreport.jdbc.minIdle}" />
		<property name="validationQuery" value="SELECT NOW() FROM DUAL" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<bean id="projectReportManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="projectreport" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				<property name="showSql" value="false" />
			</bean>
		</property>
	</bean>

	<bean id="projectReportTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="projectReportManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="projectReportTransactionManager" />
	<jpa:repositories base-package="cn.damai.boss.projectreport.dao"
		query-lookup-strategy="create-if-not-found" repository-impl-postfix="CustomImpl"
		entity-manager-factory-ref="projectReportManagerFactory"
		transaction-manager-ref="projectReportTransactionManager">
	</jpa:repositories>

	<!--memcache -->
	<bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
		<constructor-arg>
			<list>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg>
						<value>${memcached.server.address}</value>
					</constructor-arg>
					<constructor-arg>
						<value>${memcached.server.port}</value>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
		<constructor-arg>
			<list>
				<value>1</value>
			</list>
		</constructor-arg>
		<property name="connectionPoolSize" value="50"></property>
		<property name="opTimeout" value="50000"></property>
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.TextCommandFactory" />
		</property>
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator" />
		</property>
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
	</bean>
	<bean name="memcachedClient" factory-bean="memcachedClientBuilder"
		factory-method="build" destroy-method="shutdown" />

	<!-- hibernate事务配置 -->
	<bean id="projectReportHibernateSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
			</props>
		</property>
	</bean>
	<!-- 配置事务管理 -->
	<bean id="projectReportHibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="projectReportHibernateSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="projectReportHibernateTransactionManager"
		proxy-target-class="true" />

	<!-- 引入外部xml配置文件 -->
	<import resource="applicationContext-dubbo.xml"></import>
	<import resource="applicationContext-jms.xml"></import>
	<import resource="applicationContext-quartz.xml"></import>
</beans>